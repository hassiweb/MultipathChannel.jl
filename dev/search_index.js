var documenterSearchIndex = {"docs":
[{"location":"library/#Object-Documantation","page":"Library","title":"Object Documantation","text":"","category":"section"},{"location":"library/#Index","page":"Library","title":"Index","text":"","category":"section"},{"location":"library/","page":"Library","title":"Library","text":"Pages = [\"library.md\"]","category":"page"},{"location":"library/#Objects","page":"Library","title":"Objects","text":"","category":"section"},{"location":"library/","page":"Library","title":"Library","text":"Modules = [MultipathChannel]\r\nOrder   = [:function, :type]","category":"page"},{"location":"library/#MultipathChannel.applyChan-Tuple{Any,ChanPars}","page":"Library","title":"MultipathChannel.applyChan","text":"MultipathChannel.applyChan(in, chan::ChanPars; initialtime)\n\nApply multipath channel based on chan.\n\nArguments\n\nin: Input signal\nchan::ChanPars: Channel parameters\ninitialtime: Time for generating Doppler shift\n\n\n\n\n\n","category":"method"},{"location":"library/#MultipathChannel.initChan-Tuple{Any,Any,Any}","page":"Library","title":"MultipathChannel.initChan","text":"MultipathChannel.initChan(maxdoppler, samplingrate, channelmodel; rmsdelay, maxorder, gainnormalization=true)\n\nGenerate a ChanPars type channel parameters.\n\nArguments\n\nmaxdoppler: Maximum Doppler frequency (Hz)\nsamplingrate: Sampling rate (Hz)\nchannelmodel: Channel model for path delays and average path gains: supporting TDL-C, and single Rayleigh path\nrmsdelay: Root mean square delay for TDL channel models in nano seconds\nmaxorder: Maximum filter order for FDF\ngainnormalization: Indicator for normalizing path gains\n\n\n\n\n\n","category":"method"},{"location":"library/#MultipathChannel.ChanPars","page":"Library","title":"MultipathChannel.ChanPars","text":"MultipathChannel.ChanPars\n\nType of channel parameters containing:\n\nnumpaths::Int: Number of paths\npathdelays::Vector{Float64}: Delay of each path in second.  This parameter is set according to channelmodel when calling MultipathChannel.initChan.\naveragepathgains::Vector{Float64}: Average gain of each path in dB.  This parameter is set according to channelmodel when calling MultipathChannel.initChan.\nfdfcoefs::Vector{Vector{Float64}}: Coefficients of fractional delay filter (FDF).  This parameter is obtained by pathdelays.\nnonzeroindices::Vector{Int}: Non zero index of each path for FDF.  This parameter is obtained by pathdelays.\npathdopplers::Vector{Float64}: Doppler frequency of each path in Hz.  Doppler frequency is given according to Jakes model with maxdoppler.  This parameter is initialized when calling initChan.\nfadingamplitudes::Vector{Complex{Float64}}: Instantaneous gain of each path given by Rayleigh fading.  This parameter is initialized when calling initChan.\ninitialphases::Vector{Float64}: Initial phase offset of each path.  This parameter is initialized when calling initChan.\nsamplingrate::Float64:  Sampling rate in Hz\n\n\n\n\n\n","category":"type"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = MultipathChannel","category":"page"},{"location":"#MultipathChannel.jl","page":"Home","title":"MultipathChannel.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"MultipathChannel.jl provides multipath fading channel models based on the sum-of-Sinusoids (SOS) algorithm for wireless communication simulation.","category":"page"}]
}
